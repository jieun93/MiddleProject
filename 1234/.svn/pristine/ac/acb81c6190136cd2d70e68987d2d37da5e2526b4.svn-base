package kr.or.ddit.controller.knowledge.admin;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.ResourceBundle;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.stage.FileChooser;
import javafx.stage.FileChooser.ExtensionFilter;
import javafx.stage.Stage;
import kr.or.ddit.AlertDialog.AlertUtil;
import kr.or.ddit.service.knowledge.IKnowledgeService;
import kr.or.ddit.vo.A_FormJoinForm_FileVO;
import kr.or.ddit.vo.A_FormVO;
import kr.or.ddit.vo.Form_FileVO;

public class FormatEditController {

	private AdminKnowledgeFormatController formatController;

	public AdminKnowledgeFormatController getMainController() {
		return formatController;
	}

	public void setMainController(AdminKnowledgeFormatController formatController) {
		this.formatController = formatController;
	}

	@FXML
	private ResourceBundle resources;

	@FXML
	private URL location;

	@FXML
	private TextField titleTf;

	@FXML
	private ListView<String> fileList;

	@FXML
	private Button btnSearch;

	@FXML
	private Button btnDel;

	@FXML
	private Button btnHome;

	@FXML
	private Button btnEdit;

	private A_FormVO formVo;
	private Form_FileVO fileVo;
	private A_FormJoinForm_FileVO joinVo;
	private IKnowledgeService service;
//    private ObservableList<A_FormJoinForm_FileVO> data = FXCollections.observableArrayList();

	@FXML
	void btnDelClick(ActionEvent event) {
		try {
			Parent alert = FXMLLoader
					.load(FormatEditController.class.getResource("../../AlertDialog/AlertDialog2.fxml"));
			Stage del = (Stage) btnDel.getScene().getWindow();
			String yes = "예";
			String no = "아니오";
			boolean a = AlertUtil.showAlert(del, "삭제하시겠습니까?", "", yes, no);
			int cnt = 0;
			if (a == false) {
				return;
			} else {
				Form_FileVO fileVo = new Form_FileVO();
				fileVo.setA_form_no(joinVo.getA_form_no());
				cnt = service.deleteFile(fileVo);

				A_FormVO formVo = new A_FormVO();
				formVo.setA_form_no(joinVo.getA_form_no());
				cnt = service.deleteForm(formVo); 

			}

			if (cnt > 0) {
				AlertUtil.showAlert(del, "삭제하였습니다.");
			} else {
				AlertUtil.showAlert(del, "삭제 작업 실패!!");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@FXML
	void btnEditClick(ActionEvent event) {

		try {
			Parent alert = FXMLLoader
					.load(FormatEditController.class.getResource("../../../AlertDialog/AlertDialog2.fxml"));
			Stage edit = (Stage) btnEdit.getScene().getWindow();
			String yes = "예";
			String no = "아니오";
			boolean a = AlertUtil.showAlert(edit, "수정하시겠습니까?", "", yes, no);
			int cnt = 0;
			if (a == false) {
				return;
			} else {
				A_FormVO formVo = new A_FormVO();
				formVo.setA_form_name(titleTf.getText());
				formVo.setA_form_no(joinVo.getA_form_no());
				cnt = service.updateForm(formVo);

				Form_FileVO fileVo = new Form_FileVO();
				fileVo.setForm_f_addr(fileList.getItems().get(0));
				fileVo.setForm_f_no(joinVo.getForm_f_no());
				cnt = service.updateFile(fileVo);

			}

			if (cnt > 0) {
				AlertUtil.showAlert(edit, "수정하였습니다.");
			} else {
				AlertUtil.showAlert(edit, "수정 작업 실패!!");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@FXML
	void btnHomeClick(ActionEvent event) throws IOException {
		Stage stage = (Stage) btnHome.getScene().getWindow();
		Parent main = FXMLLoader.load(FormatEditController.class.getResource("../../../fxml/knowledge/admin/adminKnowledgeMain.fxml"));

		Scene scene = new Scene(main);
		stage.setScene(scene);
		stage.show();
	}

	@FXML
	void btnSearchClick(ActionEvent event) {
		Stage search = (Stage) btnSearch.getScene().getWindow();

		FileChooser fileChooser = new FileChooser();
		fileChooser.getExtensionFilters().addAll(new ExtensionFilter("All File", "*.*"),
				new ExtensionFilter("Text File", "*.txt"),
				new ExtensionFilter("Image File", "*.png", "*.jpg", "*,gif"));

		File showDir = new File("d:/");
		fileChooser.setInitialDirectory(showDir);

		List<File> selectedFile = fileChooser.showOpenMultipleDialog(search);
		if (selectedFile != null) {
			for (int i = 0; i < selectedFile.size(); i++) {
				fileList.getItems().add(selectedFile.get(i).getName());
			}
		}
	}

	public void show(A_FormJoinForm_FileVO joinVo) {
		try {
			this.joinVo = joinVo;

			titleTf.setText(joinVo.getA_form_name());
//    	fileList.getItems().add(joinVo.getForm_f_addr());

		} catch (Exception e) {
			// TODO: handle exception
		}
	}

	@FXML
	void initialize() {
		try {
			Registry reg = LocateRegistry.getRegistry(8888);

			service = (IKnowledgeService) reg.lookup("knowledge");

		} catch (RemoteException e) {
			e.printStackTrace();
		} catch (NotBoundException e) {
			e.printStackTrace();
		}

	}
}
