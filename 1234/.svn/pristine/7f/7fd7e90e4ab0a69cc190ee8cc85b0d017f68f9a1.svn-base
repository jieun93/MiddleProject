package kr.or.ddit.controller.main;

import java.io.IOException;
import java.net.URL;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.ListCell;
import javafx.scene.control.ListView;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.HBox;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.util.Callback;
import kr.or.ddit.AlertDialog.AlertUtil;
import kr.or.ddit.controller.notice.user.NoticeMainController;
import kr.or.ddit.controller.notice.user.NoticePopupController;
import kr.or.ddit.controller.search.ButtonController;
import kr.or.ddit.controller.search.CourtController;
import kr.or.ddit.service.main.ImainService;
import kr.or.ddit.session.Session;
import kr.or.ddit.vo.A_articleVO;
import kr.or.ddit.vo.CourtVO;
import kr.or.ddit.vo.NoticeVO;

public class MainPageController {
	ImainService service;
    @FXML
    private ResourceBundle resources;

    @FXML
    private URL location;

    @FXML
    private AnchorPane an_entirety;

    @FXML
    private AnchorPane topLogo;

    @FXML
    private ImageView imageView_logo;

    @FXML
    private AnchorPane an_Notice;

    @FXML
    private Label lbMoreNotice;

    @FXML
    private Label lbNotice1;

    @FXML
    private Label lbNotice2;

    @FXML
    private Label lbNotice3;

    @FXML
    private Label lbNotice4;

    @FXML
    private Label lbNotice5;

    @FXML
    private AnchorPane an_Login;

    @FXML
    private AnchorPane an_interest;

    @FXML
    private ImageView imgViewer;

    @FXML
    private Button btnImgNext;

    @FXML
    private Label lbArtNo;

    @FXML
    private Label lbArtName;

    @FXML
    private Label lbArtLoc;

    @FXML
    private Label lbArtCou;

    @FXML
    private Label lbArtLow;

    @FXML
    private Label lbArtPrice;

    @FXML
    private Label lbArtDay;

    @FXML
    private Label lbArtCatA;

    @FXML
    private Label lbArtCatB;

    @FXML
    private Label lbArtCatC;

    @FXML
    private Button btnImgPrev;

    @FXML
    private HBox an_navigation;

    @FXML
    private Label lbSearch;

    @FXML
    private Label label_search1;

    @FXML
    private Label lbStatistics;

    @FXML
    private Label label_search11;

    @FXML
    private Label lbAuction;

    @FXML
    private Label label_search12;

    @FXML
    private Label lbNotice;

    @FXML
    private Label label_search13;

    @FXML
    private Label lbKnowledge;

    @FXML
    private Label label_search14;

    @FXML
    private Label lbInformationUse;

    @FXML
    private ListView<A_articleVO> lvAuction;

    @FXML
    private AnchorPane an_searchArea;

    @FXML
    private Label label_searchArea;

    @FXML
    private ComboBox<CourtVO> cbCou;

    @FXML
    private Button btnSearchArt;

    @FXML
    private ComboBox<String> cbLoc;

    @FXML
    void an_Login_Clicked(MouseEvent event) {

    }

    @FXML
    void an_Notice_clicked(MouseEvent event) {

    }

    @FXML
    void an_interest_Clicked(MouseEvent event) {

    }

    @FXML
    void an_navigation_clicked(MouseEvent event) {

    }

    @FXML
    void an_searchArea_clicked(MouseEvent event) {

    }

    @FXML
    void label_auction_clicked(MouseEvent event) {

    }

    @FXML
    void label_knowledge_clicked(MouseEvent event) {

    }

    @FXML
    void label_notice_clicked(MouseEvent event) {
    	Stage stage =(Stage)btnImgNext.getScene().getWindow();

    	if(Session.loginUser==null) {
    		if(AlertUtil.showAlert(stage, "해당 페이지는 로그인이 필요합니다", "로그인을 하시겠습니까?", "로그인", "취소")) {
    			try {
    				Parent root = FXMLLoader.load(MainPageController.class.getResource("../../fxml/login/login.fxml"));
    				Scene scene = new Scene(root);
    				stage.setScene(scene);
    				stage.setTitle("로그인");
    				stage.show();
    			} catch (IOException e) {
    				// TODO Auto-generated catch block
    				e.printStackTrace();
    			}
    		}
    		
    	}else {
    		try {
    			FXMLLoader loader= new FXMLLoader(MainPageController.class.getResource("../../fxml/notice/user/NoticeMain.fxml"));
        		Parent root  = loader.load();
        		NoticeMainController controller = loader.getController();
        		controller.setDialog("answer");
        		Scene scene = new Scene(root);
    			stage.setScene(scene);
    			stage.setTitle("공지사항");
    			stage.show();
    			
    		} catch (IOException e) {
    			e.printStackTrace();
    		}
    	}
    	
    	
    }

    @FXML
    void label_search_clicked(MouseEvent event) {

    }

    @FXML
    void label_statistics_clicked(MouseEvent event) {

    }

    @FXML
    void lable_informationUse_clicked(MouseEvent event) {

    }

    @FXML
    void onClickedBtnImgNext(ActionEvent event) {

    }

    @FXML
    void onClickedBtnImgPrev(ActionEvent event) {

    }

    @FXML
    void onClickedBtnSearchArt(ActionEvent event) {
    	try {
			Stage stage =(Stage)btnImgNext.getScene().getWindow();
			FXMLLoader loader = new  FXMLLoader(MainPageController.class.getResource("../../fxml/search/fxmlButtonMain.fxml"));
			Parent root = loader.load();
    		ButtonController  controller = loader.getController();
    		controller.mainSearchCall(cbCou.getValue(), cbLoc.getValue());
			Scene scene = new Scene(root);
			stage.setScene(scene);
			stage.setTitle("검색");
			stage.show();
			
		} catch (IOException e) {
			e.printStackTrace();
		}
    	
    }

    @FXML
    void onClickedLbMoreNotice(MouseEvent event) {
    	try {
			Stage stage =(Stage)btnImgNext.getScene().getWindow();
    		Parent root = FXMLLoader.load(MainPageController.class.getResource("../../fxml/notice/user/NoticeMain.fxml"));
			Scene scene = new Scene(root);
			stage.setScene(scene);
			stage.setTitle("공지사항");
			stage.show();
			
		} catch (IOException e) {
			e.printStackTrace();
		}
    	
    }



    @FXML
    void topLogo_Clicked(MouseEvent event) {

    }

    @FXML
    void initialize() {
    	try {
			Registry reg = LocateRegistry.getRegistry("localhost", 8888);
			service = (ImainService) reg.lookup("main");
		} catch (RemoteException e) {
			e.printStackTrace();

		} catch (NotBoundException e) {
			e.printStackTrace();
		}
    	
   
    	
    	if(Session.loginUser==null) {
    	   try {
			Parent root = FXMLLoader.load(MainPageController.class.getResource("../../fxml/main/MainPageYetLogin.fxml"));
			an_Login.getChildren().clear();
			an_Login.getChildren().add(root);
		} catch (IOException e) {
			e.printStackTrace();
		}
    	  
       }else {
    	   try {
   			Parent root = FXMLLoader.load(MainPageController.class.getResource("../../fxml/main/MainPageLogin.fxml"));
   			an_Login.getChildren().clear();
   			an_Login.getChildren().add(root);
   		} catch (IOException e) {
   			e.printStackTrace();
   		}
       }
    	
    	
    	try {//최다 관심물품 표시..
			A_articleVO articleVO = service.getBestArticleInfo();
			lbArtCatA.setText(articleVO.getCat_a_no());
			lbArtCatB.setText(articleVO.getCat_b_no());
			lbArtCatC.setText(articleVO.getCat_c_no());
			lbArtCou.setText(articleVO.getCou_no());
			lbArtDay.setText(articleVO.getA_art_day());
			lbArtLoc.setText(articleVO.getA_art_loc());
			lbArtLow.setText(articleVO.getA_art_low());
			lbArtName.setText(articleVO.getA_art_name());
			lbArtNo.setText(articleVO.getA_art_no());
			lbArtPrice.setText(articleVO.getA_art_price());
		} catch (RemoteException e) {
			e.printStackTrace();
		}
    	
    	try {//최근 5개의 공지사항 출력
    		List<Label> noticelist = new ArrayList<Label>();
    		noticelist.add(lbNotice1);
    		noticelist.add(lbNotice2);
    		noticelist.add(lbNotice3);
    		noticelist.add(lbNotice4);
    		noticelist.add(lbNotice5);
    		
			List<NoticeVO> list = service.getNoticeList();
			
			for(int i = 0 ; i < list.size();i++) {
				noticelist.get(i).setText(list.get(i).getNotice_no()+". "+list.get(i).getNotice_title());
			}
			
			for(Label lbNotice : noticelist) {
				lbNotice.setOnMouseClicked(new EventHandler<Event>() {
					@Override
					public void handle(Event event) {
					
						NoticeVO noticeVO = service.getNoticeInfo(lbNotice.getText().split(". ")[0]);
						
						try {
							Stage stage = (Stage)btnImgNext.getScene().getWindow();
							
							Stage dialog = new Stage();
							
					    	
							dialog.initModality(Modality.WINDOW_MODAL);
							dialog.initOwner(stage);
							
							FXMLLoader loader = new FXMLLoader(
									MainPageController.class.getResource("../../fxml/notice/user/NoticePopup.fxml"));
							Parent root = loader.load();
							NoticePopupController controller = loader.getController();
							controller.setInfoData(noticeVO);
							Scene scene = new Scene(root);
							dialog.setScene(scene);
							dialog.show();
						} catch (IOException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						
					}
				});
					
			}
		} catch (RemoteException e) {
			e.printStackTrace();
		}
    	
    	
    	try {//금일 실행될 경매목록
			List<A_articleVO> auctiontList = service.getTodyAuctionList();
			lvAuction.setItems(FXCollections.observableArrayList(auctiontList));
		} catch (RemoteException e) {
			e.printStackTrace();
		}
    	
    	lvAuction.setCellFactory(new Callback<ListView<A_articleVO>, ListCell<A_articleVO>>() {
			@Override
			public ListCell<A_articleVO> call(ListView<A_articleVO> param) {
				return new ListCell<A_articleVO>() {
					@Override
					protected void updateItem(A_articleVO item, boolean empty) {
						super.updateItem(item, empty);
						if(!empty) {
							setText(item.getA_art_no()+"번의 "+item.getA_art_name()+"이 "+item.getA_art_day()+"에 진행 예정");
						}else {
							setText(null);
						}
					}
				};
			}
		});
    	
    	
    	
    	
    		try {//지역정보 콤보박스 아이템 등록
				List<String> locList = service.getLocalList();
				cbLoc.setItems(FXCollections.observableArrayList(locList));
				cbLoc.setValue(cbLoc.getItems().get(0));
			} catch (RemoteException e) {
				e.printStackTrace();
			}
    		cbLoc.valueProperty().addListener(new ChangeListener<String>() {
				@Override
				public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {
					try {
						List<CourtVO> couList=service.getCourtList(newValue);
						cbCou.setItems(FXCollections.observableArrayList(couList));
						cbCou.setValue(cbCou.getItems().get(0));
					} catch (RemoteException e) {
						e.printStackTrace();
					}
					
				}
			});
    	
    	try {
			List<CourtVO> couList = service.getCourtList(cbLoc.getItems().get(0));
			cbCou.setItems(FXCollections.observableArrayList(couList));
			cbCou.setValue(cbCou.getItems().get(0));
		} catch (RemoteException e) {
			e.printStackTrace();
		}	
    		
    		
    		
    	cbCou.setCellFactory(new Callback<ListView<CourtVO>, ListCell<CourtVO>>() {	
			@Override
			public ListCell<CourtVO> call(ListView<CourtVO> param) {
			
				return new ListCell<CourtVO>() {
					@Override
					protected void updateItem(CourtVO item, boolean empty) {
						super.updateItem(item, empty);
						if(!empty) {
							setText(item.getCou_name());
						}else {
							setText(null);
						}
						
					}
				};
			}
		});	
    	
    	cbCou.setButtonCell(new ListCell<CourtVO>() {
    		@Override
    		protected void updateItem(CourtVO item, boolean empty) {
    			super.updateItem(item, empty);
    			if(!empty) {
    				setText(item.getCou_name());
    			}else {
    				setText(null);
    			}
    		}
    	});
    		
    }
}
