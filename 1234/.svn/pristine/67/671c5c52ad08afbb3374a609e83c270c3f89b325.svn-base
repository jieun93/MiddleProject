package kr.or.ddit.controller.InformationUse;

import java.io.IOException;
import java.net.URL;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Pagination;
import javafx.scene.control.TableCell;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.util.Callback;

import kr.or.ddit.service.InformationUse.IAgencyService;
import kr.or.ddit.service.InformationUse.IFAQService;
import kr.or.ddit.vo.FAQVO;

public class FAQController {

    @FXML
    private ResourceBundle resources;

    @FXML
    private URL location;

    @FXML
    private TableView<FAQVO> tableView;

    @FXML
    private TableColumn<?, ?> colWriteNum;

    @FXML
    private TableColumn<?, ?> colWriteTitle;

    @FXML
    private Pagination pagintion;
    
    @FXML
    private Button btnModify;
    
    
    //정보 들고 다니려고 만든 것
    private AnchorPane contentsArea;
    
    public AnchorPane getContentsArea() {
		return contentsArea;
	}

	public void setContentsArea(AnchorPane contentsArea) {
		this.contentsArea = contentsArea;
	}
	
	public FAQVO faqVoInfo;
	
	public FAQVO getFaqVoInfo() {
		return faqVoInfo;
	}

	public void setFaqVoInfo(FAQVO faqVoInfo) {
		this.faqVoInfo = faqVoInfo;
	}
    
	private ObservableList<FAQVO> faqTableList;
	private IFAQService service;
	
	@FXML
    void btnModifyClicked(ActionEvent event) {
		try {
			if(tableView.getSelectionModel().isEmpty()) return;
			
			FAQVO faqVo = tableView.getSelectionModel().getSelectedItem();
			
			FXMLLoader loader = new FXMLLoader(FAQController.class.getResource("../fxml/FAQDetails.fxml"));
			
			Parent root = loader.load();
			FAQDetailsController faqCon = loader.getController();
			faqCon.setContentsArea(getContentsArea());
			faqCon.setFaqVoInfo(getFaqVoInfo());
			
			//뭐가 있으면 지워주기
			faqCon.setFaqVoInfo(getFaqVoInfo());
			int size = contentsArea.getChildren().size();
			if(size!=0) {
				for(int i=0; i<size; i++) {
					contentsArea.getChildren().remove(i);
				}
			}
			contentsArea.getChildren().add(root);
			
			//값 넣어주기
			faqCon.setName(faqVo);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
    @FXML
    void paginationCliked(MouseEvent event) {

    }

    @FXML
    void tableClicked(MouseEvent event) {
    	try {
    		FAQVO faqVo = tableView.getSelectionModel().getSelectedItem();
    		
    		FXMLLoader loader = new FXMLLoader(FAQController.class.getResource("../fxml/FAQDetails.fxml"));
    		
			Parent root = loader.load();
			
			FAQDetailsController faqCon = loader.getController();
			
			//뭐가 있으면 지워주기
			int size = contentsArea.getChildren().size();
			if(size!=0) {
				for(int i=0; i<size; i++) {
					contentsArea.getChildren().remove(i);
				}
			}
			contentsArea.getChildren().add(root);
			
			//값 넣어주기
			faqCon.setName(faqVo);
			
			
    		
		} catch (IOException e) {
			e.printStackTrace();
		}
    	
    	
    	
    }

    @FXML
    void initialize() {

    	//SERVICE 만들기
    	try {
			Registry reg = LocateRegistry.getRegistry(9999);
			service = (IFAQService) reg.lookup("IFAQService");
		} catch (RemoteException e) {
			e.printStackTrace();
			
		}catch (NotBoundException e) {
			e.printStackTrace();
		}
    	
    	faqTableList = FXCollections.observableArrayList(service.getAllFAQList());
    	
    	colWriteNum.setCellValueFactory(new PropertyValueFactory<>("faq_no"));
    	colWriteTitle.setCellValueFactory(new PropertyValueFactory<>("faq_title"));
    	
    	tableView.setItems(faqTableList);
    	
    }
}
