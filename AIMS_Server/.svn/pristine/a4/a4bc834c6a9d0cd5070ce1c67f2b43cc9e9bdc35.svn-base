package kr.or.ddit.service.stuff;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.util.List;

import kr.or.ddit.dao.stuff.AdminDao;
import kr.or.ddit.dao.stuff.IAdminDao;
import kr.or.ddit.vo.A_articleVO;
import kr.or.ddit.vo.CategoryAVO;
import kr.or.ddit.vo.CategoryBVO;
import kr.or.ddit.vo.CategoryCVO;
import kr.or.ddit.vo.CourtVO;
import kr.or.ddit.vo.FileInfoVO;




public class AdminService extends UnicastRemoteObject implements IAdminService {
//-------------------------------------------------------------------------------------------
	private IAdminDao dao;
	
	private static AdminService service;
	
	private AdminService() throws RemoteException {
		dao = AdminDao.getInstance();
	}
	
	public static AdminService getInstance() {
		if(service == null)
			try {
				service = new AdminService();
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		
		return service;
	}
//-------------------------------------------------------------------------------------------
	@Override
	public int insertStuff(A_articleVO articleVo) {
		return dao.insertStuff(articleVo);
	}

	@Override
	public int deleteStuff(String a_art_no) {
		return dao.deleteStuff(a_art_no);
	}

	@Override
	public int updateStuff(A_articleVO articleVo) {
		return dao.updateStuff(articleVo);
	}

	@Override
	public List<A_articleVO> NumSearch(String a_art_no) {
		return dao.NumSearch(a_art_no);
	}

	@Override
	public List<A_articleVO> getAllStuff() {
		return dao.getAllStuff();
	}

	@Override
	public List<CategoryAVO> getAllACategory() {
		return dao.getAllACategory();
	}

	@Override
	public List<CategoryBVO> getAllBCategory(String cat_a_no) {
		return dao.getAllBCategory(cat_a_no);
	}

	@Override
	public List<CategoryCVO> getAllCCategory(String cat_b_no) {
		return dao.getAllCCategory(cat_b_no);
	}

	@Override
	public List<CourtVO> getAllCourt(String add) {
		return dao.getAllCourt(add);
	}
	
	@Override
	public String clientToServer(String folderName, FileInfoVO fileData) throws RemoteException {
		File file = new File("D:/D_Other/dataStage/" + folderName + "/" + fileData.getFileName());
		byte[] data = fileData.getFileData();
		try {
			FileOutputStream fos = new FileOutputStream(file);
			fos.write(data);
			fos.flush();
			fos.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return file.getPath();
	}

	@Override
	public List<String> courtAdd() throws RemoteException {
		return dao.courtAdd();
	}
	
	

}
